;;
;; CRT model : 10 hour shift
;; 
(set-task "actr.tasks.CRT.CRT_10hour_shift")

(set-schedule 
    (8.0 24.0)(32.0 49.0)(58.0 72.0)(79.0 93.0)(101.0 114.0)
)

(add-dm
    (goal isa goal state wait)
    (i1 isa instruction action respond condition "TRUE" key t) 
    (i2 isa instruction action respond condition "FALSE" key f)
)

(sgp 
    :v nil
    
    ;; Fatigue parameters    
    :fatigue t   
    :iu 2.8
    :ut 2.3
    ;;:microlapses nil
    :fpbmc .02
    :fpmc -.005
    :utbmc .01  
    :utmc -.0012
    :fp-dec 0.01
    :egs .25
    ;:cst t
    :dat .05
    :randomize-time t
    :vpft t
    :max-prep-time-diff 10.0
    
    
)

(goal-focus goal)


(p wait 
    =goal>
        isa goal
        state                 wait
        - state                 done
    ?manual>
        state                 free
    ?visual>
        state                 free
    ?visual-location>
        buffer                empty
==>
)
;(spp :u 1)

(p attend-stimulus
    =goal>
        isa goal
        state                 =state
        - state                 done                       
        - state                 look
    =visual-location>
        isa visual-location
==>
    +visual>               
        isa	move-attention
        screen-pos =visual-location
    =goal>
        state attending-stimulus
)
;(spp :u 1)

(p see-stimulus*respond-true
    =goal>
        isa goal
        state attending-stimulus
    =visual>
        isa text
        value "TRUE"
    ?manual>
        state free 
==>
    !output! (=val)
    +manual>
        isa press-key
        key "t"
    =goal>
        state done
)

;(spp :u 1)


(p see-stimulus*respond-false
    =goal>
        isa goal
        state attending-stimulus
    =visual>
        isa text
        value "FALSE"
    ?manual>
        state free 
==>
    !output! (=val)
    +manual>
        isa press-key
        key "f"
    =goal>
        state done
)

(p press-key 
    =goal>
        isa goal
        ;state wait
    ?manual>
        state free 
==>
    !output! ("***  press Key - False Start  ***")
    +manual>
        isa press-key
        key space
    =goal>
        state wait
)
(spp :u 0)

