;;
;; Driver PVT model : Night A
;; 
(set-task "actr.tasks.CRT.CRT_8hour_shift")

(set-schedule 
    (8.0 24.0)(32.0 48.0)(56.0 72.0)(78.0 94.0)(101.0 114.0)(118.0 128)
)

(add-dm
    (goal isa goal state wait)
    (i1 isa instruction action respond condition "TRUE" key t) 
    (i2 isa instruction action respond condition "FALSE" key f)
)

(sgp 
    :v t
    
    ;; Fatigue parameters    
    :fatigue t   
    :iu 2.8
    :ut 2.3
    ;;:microlapses nil
    :fpbmc .02
    :fpmc -.005
    :utbmc .01  
    :utmc -.0012
    :fp-dec 0.01
    :egs .25
    ;:cst t
    :dat .05
    :randomize-time t
    :vpft t
    :max-prep-time-diff 10.0
    
    ;; Other parameters
    :epl t
    :v t
    :pct t
    :ul t
    :rt 0
    :lf 0.4
    :ans 0.5
    :egs 0.1
    :bll 0.5
    :iu 10
    :alpha 1 ;; 0.2
    
)

(goal-focus goal)


(p wait 
    =goal>
        isa goal
        state                 wait
        - state                 done
    ?manual>
        state                 free
    ?visual>
        state                 free
    ?visual-location>
        buffer                empty
==>
)
;(spp :u 1)

(p attend-stimulus
    =goal>
        isa goal
        state                 =state
        - state                 done                       
        - state                 look
    =visual-location>
        isa visual-location
==>
    +visual>               
        isa	move-attention
        screen-pos =visual-location
    =goal>
        state attending-stimulus
)
;(spp :u 1)

(p see-stimulus
    =goal>
        isa goal
        state attending-stimulus
    =visual>
        isa text
        value =val
    ?retrieval>
        state free
==>
    !output! (=val)
    +retrieval>
        isa instruction
        condition =val
    =goal>
        state respond
    +visual>
        isa clear
)

;(spp :u 1)

(p respond
    =goal>
        isa goal
        state respond
    ?manual>
        state free 
    =retrieval>
        isa instruction 
        key =key
==>
    +manual>
        isa press-key
        key =key
    =goal>
        state done
)

(p press-key 
    =goal>
        isa goal
        ;state wait
    ?manual>
        state free 
==>
    !output! ("***  press Key - False Start  ***")
    +manual>
        isa press-key
        key space
    =goal>
        state wait
)
(spp :u 0)

